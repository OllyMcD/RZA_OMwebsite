@page "/accessibility"
@using MudBlazor
@using RZA_OMwebsite.Pages
@inject PageService PageService
@inject NavigationManager NavigationManager


<MudPaper Class="pa-4 mx-auto" MaxWidth="600px" Elevation="3">
    <MudText Typo="Typo.h4" Align="Align.Center">Settings</MudText>
    <MudDivider Class="my-2" />

    <!-- High Contrast Mode -->
    <MudGrid Justify="Justify.Center" AlignItems="Center">
        <MudItem xs="12" sm="6">
            <MudText Typo="Typo.body1">Enable High Contrast Mode</MudText>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudSwitch T="bool" @bind-Checked="highContrastEnabled" Color="Color.Primary" />
        </MudItem>
    </MudGrid>

    <!-- Increase Text Size -->
    <MudGrid Justify="Justify.Center" AlignItems="Center">
        <MudItem xs="12" sm="6">
            <MudText Typo="Typo.body1">Increase Text Size</MudText>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudSlider Min="12" Max="24" Step="1" @bind-Value="textSize" />
        </MudItem>
    </MudGrid>

    <!-- Account Settings Link -->
    <MudGrid Justify="Justify.Center" AlignItems="Center" class="mt-4">
        <MudItem xs="12">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="NavigateToAccountStatus">Account Settings</MudButton>
        </MudItem>
    </MudGrid>
</MudPaper>

@code {
    private bool highContrastEnabled = false;
    private double textSize = 16;
    private bool first = true;

    private void NavigateToAccountStatus()
    {
        // Use NavigationManager to navigate to the AccountStatus page
        NavigationManager.NavigateTo("/account-status");
    }

    protected override async Task OnInitializedAsync()
    {
        Task.Delay(1000);
    }
    

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Get the current page URL (this can be adjusted depending on how you're tracking page URL)
            var currentPageUrl = NavigationManager.Uri.Substring(22);

            // Call the method to track the page view
            await PageService.TrackPageViewAsync(currentPageUrl);
            first = false;
        }
    }
}
