@page "/account-status"
@using MudBlazor
@using RZA_OMwebsite.Services
@using RZA_OMwebsite.Models
@inject NavigationManager NavigationManager
@inject CustomerService CustomerService
@inject AuthService AuthService

<MudPaper Class="pa-4 mx-auto" MaxWidth="800px" Elevation="4">
    <MudText Typo="Typo.h4" Align="Align.Center">Account Status</MudText>
    <MudDivider Class="my-2" />

    @if (customer == null)
    {
        <MudText Typo="Typo.body1" Align="Align.Center">Please log in to see your account details.</MudText>

        <MudGrid Justify="Justify.Center" Class="mt-4">
            <MudItem>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="NavigateToLogin" Class="mt-4" Style="font-size: 1.5rem; padding: 0.75rem 1.5rem; width: 200px;">
                    Log In
                </MudButton>
            </MudItem>
        </MudGrid>
    }
    else
    {
        <!-- User Information -->
        <MudCard Class="mb-4">
            <MudCardContent>
                <MudText Typo="Typo.h5">User Information</MudText>
                <MudDivider Class="my-2" />
                <MudGrid>
                    <MudItem xs="12" sm="6">
                        <MudText Typo="Typo.body1"><strong>Username:</strong> @customer.Username</MudText>
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudText Typo="Typo.body1"><strong>Email:</strong> @customer.Email</MudText>
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudText Typo="Typo.body1"><strong>Post Code:</strong> @customer.Postcode</MudText>
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudText Typo="Typo.body1"><strong>Phone Number:</strong> @customer.PhoneNumber</MudText>
                    </MudItem>
                </MudGrid>
            </MudCardContent>
        </MudCard>

        <!-- Account Security -->
        <MudCard Class="mb-4">
            <MudCardContent>
                <MudText Typo="Typo.h5">Security Settings</MudText>
                <MudDivider Class="my-2" />
                <MudText Typo="Typo.body1">Change your password and manage security settings below.</MudText>
                <br />
                <MudButton Variant="Variant.Outlined" Color="Color.Primary" OnClick="NavigateToChangePassword">Change Password</MudButton>
            </MudCardContent>
        </MudCard>

        <!-- Account Actions -->
        <MudCard Class="mb-4">
            <MudCardContent>
                <MudText Typo="Typo.h5">Account Actions</MudText>
                <MudDivider Class="my-2" />
                <MudButton Variant="Variant.Outlined" Color="Color.Error" OnClick="ShowDeleteConfirmation">Delete Account</MudButton>

                @if (showDeleteConfirmation)
                {
                    <MudText Typo="Typo.body2" Color="Color.Error" Class="mt-2">Are you sure you want to delete your account? This action cannot be undone.</MudText>
                    <MudGrid Justify="Justify.Center" Class="mt-2">
                        <MudItem>
                            <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="DeleteAccount">Yes, Delete</MudButton>
                            <MudButton Variant="Variant.Outlined" Color="Color.Default" OnClick="CancelDelete">Cancel</MudButton>
                        </MudItem>
                    </MudGrid>
                }
            </MudCardContent>
        </MudCard>

        <!-- Logout Button -->
        <MudGrid Justify="Justify.Center">
            <MudItem>
                <br />
                <br />
                <MudButton Variant="Variant.Filled" Color="Color.Default" OnClick="Logout">Logout</MudButton>
            </MudItem>
        </MudGrid>
    }
</MudPaper>

@code {
    private Customer? customer;
    private bool showDeleteConfirmation = false;

    protected override async Task OnInitializedAsync()
    {
        if (AuthService.isLoggedIn)
        {
            // Fetch customer details if logged in
            customer = await CustomerService.GetCustomerByUsernameAsync(AuthService.CurrentUsername);
        }
    }

    private void ShowDeleteConfirmation()
    {
        showDeleteConfirmation = true;
    }

    private void CancelDelete()
    {
        showDeleteConfirmation = false;
    }

    private async Task DeleteAccount()
    {
        if (customer != null)
        {
            // Call the delete method from CustomerService
            await CustomerService.DeleteCustomerAsync(customer.Username); // Assuming you have this method implemented
            AuthService.Logout();
            NavigationManager.NavigateTo("/login"); // Redirect to login page after deletion
            Console.WriteLine("Account Deleted"); 
        }
    }

    private void NavigateToChangePassword()
    {
        NavigationManager.NavigateTo("/changePassword");
    }

    private void NavigateToLogin()
    {
        NavigationManager.NavigateTo("/login");
    }

    private void Logout()
    {
        AuthService.Logout();
        NavigationManager.NavigateTo("/login"); // Redirect to login page
    }
}
