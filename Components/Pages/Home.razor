@page "/"
@inject NavigationManager NavigationManager
@using RZA_OMwebsite.Pages
@inject PageService PageService

<body>
<MudCarousel Class="mud-width-full" Style="height:830px;" ShowArrows="@arrows" ShowBullets="@bullets" EnableSwipeGesture="@enableSwipeGesture" AutoCycle="@autocycle" TData="object">
    <MudCarouselItem Transition="transition" Color="@Color.Primary">
        <div class="d-flex" style="height:100%">
            <MudIcon Class="mx-auto my-auto" Icon="@Icons.Custom.Brands.MudBlazor" Size="@Size.Large" />
        </div>
    </MudCarouselItem>
    <MudCarouselItem Transition="transition" Color="@Color.Secondary">
        <div class="d-flex" style="height:100%">
            <MudIcon Class="mx-auto my-auto" Icon="@Icons.Custom.Brands.MudBlazor" Size="@Size.Large" />
        </div>
    </MudCarouselItem>
    <MudCarouselItem Transition="transition">
        <div class="d-flex" style="height:100%">
            <MudIcon Class="mx-auto my-auto" Icon="@Icons.Custom.Brands.MudBlazor" Color="@Color.Primary" Size="@Size.Large" />
        </div>
    </MudCarouselItem>
</MudCarousel>

    <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Style="height:62px" Class="MudContainer">
        <div class="d-flex justify-content-evenly" style="width:100%">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="" Href="/register">Register</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="float-end" Href="/login">Login</MudButton>
    </div>
</MudContainer>
</body>

@code {
    private bool arrows = false;
    private bool bullets = false;
    private bool enableSwipeGesture = false;
    private bool autocycle = true;
    private Transition transition = Transition.Fade;
    private bool first = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Get the current page URL (this can be adjusted depending on how you're tracking page URL)
            var currentPageUrl = NavigationManager.Uri.Substring(22);

            // Call the method to track the page view
            await PageService.TrackPageViewAsync(currentPageUrl);
            first = false;
        }
    }
}

<style>
    /* AppBar styling */
    .mud-appbar {
        background-color: #004d40; /* Deep teal for a professional feel */
        color: white;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1); /* Soft shadow for smoothness */
    }


    .MudContainer {
        background-color: darkslateblue; /* Deep teal for a professional feel */
        color: white;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1); /* Soft shadow for smoothness */
    }
</style>