@inherits LayoutComponentBase
@inject ISnackbar Snackbar

<MudThemeProvider Theme ="MyCustomTheme"/>

@* IsDarkMode=@true *@

@code {
    MudTheme MyCustomTheme = new MudTheme()
        {
            PaletteLight = new PaletteLight()
            {
                Primary = "#4d8e0f", // Background color
                Secondary = "#7ab820", // Background color
                AppbarBackground = "#9aba8b", // Background color
                Background = "#9aba8b", // Background color
                Surface = "#7ab820", // Background color
                TextPrimary = Colors.Shades.Black, // Black text
                TextSecondary = Colors.Shades.Black, // Black text
            },
            PaletteDark = new PaletteDark()
            {
                Primary = "#2f5e0a", // Darker green for contrast
                Secondary = "#537c15", // Dark green
                AppbarBackground = "#789961", // Muted green
                Background = "#789961", // Muted green for the dark theme
                Surface = "#537c15", // Dark green for surface
                TextPrimary = Colors.Shades.Black, // White text for contrast
                TextSecondary = Colors.Shades.Black, // White text for contrast
            },
        };
}



<MudPopoverProvider />

@* Needed for dialogs *@
<MudDialogProvider />

@* Needed for snackbars *@
<MudSnackbarProvider />

<MudLayout>
    <MudDrawer @bind-Open="open" Width="250px" Class="mud-drawer">
        <NavMenu /> <!-- Include NavMenu here -->
    </MudDrawer>
    <MudAppBar Fixed="false" Color="Color.Primary" Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" @onclick="ToggleDrawer" />
        <MudSpacer />
        <MudText Typo="Typo.h5">Rigit Zoo Adventure</MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.Settings" Alt="Settings" href="/accessibility" />
    </MudAppBar>
    <MudMainContent Class="pt-0">
        @Body
    </MudMainContent>

    <div id="blazor-error-ui">
        An unhandled error has occurred.
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
</MudLayout>

@code {
    bool open = false;

    void ToggleDrawer()
    {
        try
        {
            open = !open;
        }
        catch (Exception ex)
        {
            // Log the error if needed
            Console.WriteLine($"Error toggling drawer: {ex.Message}");
            Snackbar.Add("Error toggling the drawer. Please try again.", Severity.Error);
        }
    }
}
